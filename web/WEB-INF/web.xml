<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>ssm1</display-name>
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>

  </welcome-file-list>
  <!-- 配置DispatcherServlet -->
  <servlet>
    <servlet-name>springmvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- 配置springmvc配置文件的路径,因为默认服务器会查找WEB-INF/servlet名称-servlet.xml -->
    <init-param>
       <param-name>contextConfigLocation</param-name>
       <param-value>classpath:springmvc-servlet.xml</param-value>
    </init-param>
  </servlet>
  
  <servlet-mapping>
    <servlet-name>springmvc</servlet-name>
    <!-- url-pattern可取值：1.  *.action 所有的以.action结尾都有DispatcherServlet进行处理
    
                         2.  /*  所有的请求都有DispathcerServlet处理，包括 *.jsp
                                 当DispatcherServlet接收到jsp时找对应的处理器处理请求，但是在springmvc中没有
                                 针对jsp的处理器，所以当请求路径中包含.jsp时会报错(404)
                         3. / 所有的请求都由DispatcherServlet进行处理,不包含*.jsp
                         支持RESTful风格的访问，所以推荐使用/
     -->
    
    <url-pattern>/</url-pattern>
  </servlet-mapping>



  <!-- 配置错误页面 -->
  <error-page>
    <!-- error-code错误码：404 500 405-->
    <error-code>404</error-code>
    <!-- 如果出现404错误，请求转发到location指定的页面去 -->
    <location>/404.jsp</location>
  </error-page>
  
  <error-page>
    <error-code>500</error-code>
    <location>/500.jsp</location>
  </error-page>
  
   <!-- 配置处理中文乱码的过滤器 -->
	<filter>
	  <filter-name>encodingFilter</filter-name>
	  <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
	  <init-param>
	    <param-name>encoding</param-name>
	    <param-value>utf-8</param-value>
	  </init-param>
	</filter>
	<filter-mapping>
	  <filter-name>encodingFilter</filter-name>
	  <url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 配置一个监听器，当服务器启动时加载spring的配置文件，同时创建spring文件中的对象 
	   这个监听器，默认读取的是WEB-INF下的applicationContext.xml，我们需要配置自己的路径
	-->
	<listener>
	   <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- 配置spring文件的读取路径 -->
	<context-param>
	   <param-name>contextConfigLocation</param-name>
	   <param-value>classpath:applicationContext.xml</param-value>
	</context-param>
</web-app>